on:
  push:
    branches:
      - master

name: Production - Build and Deploy

env:
  registry: "wayke.azurecr.io"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main

    - name: Use .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Restore packages
      run: |
        dotnet nuget update source "wayke-gh" --store-password-in-clear-text --configfile NuGet.Config -u "ourbjorn" -p "${{ secrets.NUGET_TOKEN }}"
        dotnet restore

    - name: Run test suite
      run: |
        dotnet test

  build-and-deploy:
    needs: test

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main

    - name: Connect to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Use .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Restore .NET packages
      run: |
        dotnet nuget update source "wayke-gh" --store-password-in-clear-text --configfile NuGet.Config -u "ourbjorn" -p "${{ secrets.NUGET_TOKEN }}"
        dotnet restore

    - name: Build Release version
      run: |
        dotnet publish [[PROJECT FILE]] -c Release -o out/ -r linux-musl-x64

    - name: Build Docker image
      run: |
        docker build -t ${{ env.registry }}/${{ github.repository }}:${{ github.sha }} -f Dockerfile .

    - name: Publish Docker image
      run: |
        docker push ${{ env.registry }}/${{ github.repository }}:${{ github.sha }}
      
    - name: Install kubectl
      uses: azure/setup-kubectl@v1

    - name: Prepare deployment files
      run: |
        export K8S_DEPLOYMENT="$(kubectl set image -f deploy/base/deployment.yaml admin-ui="${{ env.registry }}/${{ github.repository }}:${{ github.sha }}" --local -o yaml)"
        printf '%s' "${K8S_DEPLOYMENT}" > deploy/base/deployment.yaml

    - name: Connect to Azure Kubernetes Service
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_PRODUCTION }}
        cluster-name: wayke-prod-aks
        resource-group: production-env

    - name: Deploy to Azure Kubernetes Service
      run: |
        kubectl apply --kustomize deploy/overlays/production